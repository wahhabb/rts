# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-11 22:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gcd_id', models.IntegerField()),
                ('catalog_id', models.CharField(max_length=255)),
                ('volume', models.CharField(max_length=255)),
                ('number', models.IntegerField()),
                ('issue_text', models.CharField(max_length=255)),
                ('publication_date', models.CharField(max_length=255)),
                ('gcd_notes', models.CharField(max_length=255)),
                ('notes', models.CharField(max_length=255)),
                ('grade', models.CharField(max_length=255)),
                ('grade_notes', models.CharField(max_length=255)),
                ('cover_image', models.CharField(max_length=255)),
                ('image_scanned', models.BooleanField()),
                ('indicia_date', models.CharField(max_length=255)),
                ('inserts', models.CharField(max_length=255)),
                ('si', models.CharField(max_length=255)),
                ('added_date', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('quantity', models.IntegerField()),
                ('status', models.CharField(max_length=63)),
                ('sold_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gcd_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gcd_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('sort_name', models.CharField(max_length=255)),
                ('year_began', models.IntegerField()),
                ('notes', models.CharField(max_length=255)),
                ('issue_count', models.IntegerField()),
                ('color', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('gcd_publisher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comix.Publisher')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='gcd_series_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comix.Series'),
        ),
        migrations.AddField(
            model_name='issue',
            name='genre_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comix.Genre'),
        ),
        migrations.AddField(
            model_name='issue',
            name='tags',
            field=models.ManyToManyField(to='comix.Tag'),
        ),
    ]
